# Copyright (C) 2023 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/gn/fangtian.gni")
import("//ace_engine/ft_build/ace_config.gni")

template("napi_prompt_static") {
  forward_variables_from(invoker, "*")

  ft_source_set(target_name) {
    defines += invoker.defines
    cflags_cc += invoker.cflags_cc

    include_dirs = [
      "$ace_root",
      "$ace_root/frameworks",
      "$ace_napi",
      "$root_out_dir/arkui/framework",
    ]

    sources = [ "../js_prompt.cpp" ]

    deps = [ 
      "$ace_napi/ft_build:ace_napi",
      "//build/gn/configs/system_libs:libuv", 
    ]

    if (defined(config.libace_target)) {
      deps += [ config.libace_target ]
    }

    deps += [ "../../utils/ft_build:napi_utils_static_${platform}" ]
  }
}

foreach(item, ace_platforms) {
  napi_prompt_static("prompt_static_" + item.name) {
    defines = []
    cflags_cc = []
    config = {
    }
    platform = current_platform.name

    if (defined(item.config)) {
      config = item.config
    }

    if (defined(config.defines)) {
      defines = config.defines
    }

    if (defined(config.cflags_cc)) {
      cflags_cc = config.cflags_cc
    }
  }
}
