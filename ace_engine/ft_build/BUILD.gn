# Copyright (c) 2023 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/gn/fangtian.gni")
import("//ace_engine/ft_build/ace_config.gni")

# Common config for Ability Cross-platform Environment(ACE) source
config("ace_config") {
  include_dirs = [
    "$ace_root",
    "$ace_root/frameworks",
    "$root_out_dir/arkui/framework",
    "//arkcompiler/ets_runtime",
    "//arkcompiler/runtime_core",
    "$ace_napi",
    "$ace_root/frameworks/bridge",
  ]

  defines = ace_common_defines

  cflags = [
    "-fvisibility=hidden",
    "-fdata-sections",
    "-ffunction-sections",
    "-Wno-non-c-typedef-for-linkage",
    "-Os",
  ]

  cflags_cc = [
    "-fvisibility-inlines-hidden",
    "-Wno-non-c-typedef-for-linkage",
    "-Wno-unused-lambda-capture",
    "-Os",
  ]

  if (use_linux) {
    cflags_cc += [ "-std=c++17" ]
    defines += [ "_USE_MATH_DEFINES" ]
  }
}

config("ace_test_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "$ace_root/frameworks",
    "$root_out_dir/arkui/framework",
  ]
  cflags_cc = []
  defines = ace_common_defines

  if (!is_standard_system) {
    defines += [ "ENABLE_NATIVE_VIEW" ]
  }

#defines += [ "OHOS_PLATFORM" ]

  cflags = [
    "-fvisibility=hidden",
    "-fdata-sections",
    "-ffunction-sections",
  ]

  cflags_cc += [ "-fvisibility-inlines-hidden" ]
  ldflags = [ "-Wl,-gc-sections" ]
}

config("ace_unittest_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "$ace_root/frameworks",
    "$root_out_dir/arkui/framework",
  ]
  cflags_cc = []
  defines = []

  cflags = [
    "-fvisibility=hidden",
    "-fdata-sections",
    "-ffunction-sections",
  ]

  cflags_cc += [ "-fvisibility-inlines-hidden" ]
  ldflags = [ "-Wl,-gc-sections" ]

  defines += [ "ACE_UNITTEST" ]
}

config("ace_test_coverage_config") {
  if (ace_engine_feature_enable_coverage) {
    cflags = [ "--coverage" ]
    ldflags = [ "--coverage" ]
  }
}
