# Copyright (c) 2023 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/gn/fangtian.gni")
import("//ace_engine/ft_build/ace_config.gni")
import("//ace_engine/ft_build/build/uicast.gni")

# build core sources
template("ace_core_source_set") {
  forward_variables_from(invoker, "*")

  ft_source_set(target_name) {
    defines += invoker.defines
    platform = invoker.platform

    # add common source file needed by all product platform here
    sources = [
      # accessibility
      "../accessibility/accessibility_node.cpp",
      "../accessibility/accessibility_utils.cpp",

      # animation
      "../animation/animatable_data.cpp",
      "../animation/animatable_properties.cpp",
      "../animation/animation_util.cpp",
      "../animation/animator.cpp",
      "../animation/animator_group.cpp",
      "../animation/anticipate_curve.cpp",
      "../animation/bilateral_spring_adapter.cpp",
      "../animation/bilateral_spring_node.cpp",
      "../animation/card_transition_controller.cpp",
      "../animation/cubic_curve.cpp",
      "../animation/curves.cpp",
      "../animation/friction_motion.cpp",
      "../animation/property_animation.cpp",
      "../animation/scheduler.cpp",
      "../animation/scroll_motion.cpp",
      "../animation/shared_transition_controller.cpp",
      "../animation/shared_transition_effect.cpp",
      "../animation/simple_spring_adapter.cpp",
      "../animation/simple_spring_chain.cpp",
      "../animation/simple_spring_node.cpp",
      "../animation/spring_animation.cpp",
      "../animation/spring_curve.cpp",
      "../animation/spring_model.cpp",
      "../animation/spring_motion.cpp",
      "../animation/svg_animate.cpp",

      # common
      "../common/ace_application_info.cpp",
      "../common/ace_engine.cpp",
      "../common/ace_engine_ext.cpp",
      "../common/anr_thread.cpp",
      "../common/card_scope.cpp",
      "../common/clipboard/clipboard_proxy.cpp",
      "../common/container.cpp",
      "../common/container_scope.cpp",
      "../common/environment/environment_proxy.cpp",
      "../common/event_manager.cpp",
      "../common/focus_animation_manager.cpp",
      "../common/font_loader.cpp",
      "../common/font_manager.cpp",
      "../common/platform_bridge.cpp",
      "../common/sharedata/share_data.cpp",
      "../common/storage/storage_proxy.cpp",
      "../common/text_field_manager.cpp",
      "../common/thread_checker.cpp",
      "../common/vibrator/vibrator_proxy.cpp",
      "../common/watch_dog.cpp",
      "../common/window.cpp",

      # declaration
      "../components/declaration/badge/badge_declaration.cpp",
      "../components/declaration/button/button_declaration.cpp",
      "../components/declaration/canvas/canvas_declaration.cpp",
      "../components/declaration/clock/clock_declaration.cpp",
      "../components/declaration/common/declaration.cpp",
      "../components/declaration/common/declaration_constants.cpp",
      "../components/declaration/common/declaration_creator_manager.cpp",
      "../components/declaration/common/event.cpp",
      "../components/declaration/div/div_declaration.cpp",
      "../components/declaration/image/image_animator_declaration.cpp",
      "../components/declaration/input/input_declaration.cpp",
      "../components/declaration/piece/piece_declaration.cpp",
      "../components/declaration/qrcode/qrcode_declaration.cpp",
      "../components/declaration/richtext/rich_text_declaration.cpp",
      "../components/declaration/search/search_declaration.cpp",
      "../components/declaration/side_bar/side_bar_declaration.cpp",
      "../components/declaration/span/span_declaration.cpp",
      "../components/declaration/svg/svg_animate_declaration.cpp",
      "../components/declaration/svg/svg_base_declaration.cpp",
      "../components/declaration/svg/svg_circle_declaration.cpp",
      "../components/declaration/svg/svg_declaration.cpp",
      "../components/declaration/svg/svg_ellipse_declaration.cpp",
      "../components/declaration/svg/svg_fe_colormatrix_declaration.cpp",
      "../components/declaration/svg/svg_fe_component_transfer_declaration.cpp",
      "../components/declaration/svg/svg_fe_composite_declaration.cpp",
      "../components/declaration/svg/svg_fe_declaration.cpp",
      "../components/declaration/svg/svg_fe_flood_declaration.cpp",
      "../components/declaration/svg/svg_fe_func_declaration.cpp",
      "../components/declaration/svg/svg_fe_gaussianblur_declaration.cpp",
      "../components/declaration/svg/svg_fe_merge_declaration.cpp",
      "../components/declaration/svg/svg_fe_merge_node_declaration.cpp",
      "../components/declaration/svg/svg_fe_offset_declaration.cpp",
      "../components/declaration/svg/svg_filter_declaration.cpp",
      "../components/declaration/svg/svg_gradient_declaration.cpp",
      "../components/declaration/svg/svg_line_declaration.cpp",
      "../components/declaration/svg/svg_mask_declaration.cpp",
      "../components/declaration/svg/svg_path_declaration.cpp",
      "../components/declaration/svg/svg_pattern_declaration.cpp",
      "../components/declaration/svg/svg_polygon_declaration.cpp",
      "../components/declaration/svg/svg_rect_declaration.cpp",
      "../components/declaration/svg/svg_stop_declaration.cpp",
      "../components/declaration/svg/svg_text_declaration.cpp",
      "../components/declaration/svg/svg_text_path_declaration.cpp",
      "../components/declaration/swiper/swiper_declaration.cpp",
      "../components/declaration/text/text_declaration.cpp",
      "../components/declaration/textarea/textarea_declaration.cpp",
      "../components/declaration/textfield/textfield_declaration.cpp",
      "../components/declaration/texttimer/texttimer_declaration.cpp",
      "../components/declaration/web/web_declaration.cpp",
      "../components/declaration/xcomponent/xcomponent_declaration.cpp",

      # gestures
      "../gestures/click_recognizer.cpp",
      "../gestures/drag_recognizer.cpp",
      "../gestures/exclusive_recognizer.cpp",
      "../gestures/gesture_recognizer.cpp",
      "../gestures/gesture_referee.cpp",
      "../gestures/long_press_recognizer.cpp",
      "../gestures/multi_fingers_recognizer.cpp",
      "../gestures/pan_recognizer.cpp",
      "../gestures/parallel_recognizer.cpp",
      "../gestures/pinch_recognizer.cpp",
      "../gestures/press_recognizer.cpp",
      "../gestures/raw_recognizer.cpp",
      "../gestures/rotation_recognizer.cpp",
      "../gestures/sequenced_recognizer.cpp",
      "../gestures/single_child_gesture.cpp",
      "../gestures/slide_recognizer.cpp",
      "../gestures/swipe_recognizer.cpp",
      "../gestures/timeout_recognizer.cpp",
      "../gestures/velocity_tracker.cpp",

      # declarative
      "../gestures/gesture_group.cpp",
      "../gestures/long_press_gesture.cpp",
      "../gestures/pan_gesture.cpp",
      "../gestures/pinch_gesture.cpp",
      "../gestures/rotation_gesture.cpp",
      "../gestures/slide_gesture.cpp",
      "../gestures/tap_gesture.cpp",
      "../gestures/timeout_gesture.cpp",

      # event
      "../event/back_end_event_manager.cpp",
      "../event/event_convertor.cpp",
      "../event/key_event.cpp",
      "../event/key_event_recognizer.cpp",
      "../event/mouse_raw_recognizer.cpp",

      # focus
      "../focus/focus_node.cpp",

      # image
      "../image/animated_image_player.cpp",
      "../image/flutter_image_cache.cpp",
      "../image/image_cache.cpp",
      "../image/image_compressor.cpp",
      "../image/image_loader.cpp",
      "../image/image_object.cpp",
      "../image/image_object_animated.cpp",
      "../image/image_object_svg.cpp",
      "../image/image_provider.cpp",
      "../image/image_source_info.cpp",

      # textfield
      "../common/ime/text_editing_value.cpp",
      "../common/ime/text_input_action.cpp",
      "../common/ime/text_input_configuration.cpp",
      "../common/ime/text_input_connection.cpp",
      "../common/ime/text_input_formatter.cpp",
      "../common/ime/text_input_proxy.cpp",
      "../common/ime/text_input_type.cpp",

      # flutter impl
      "../common/flutter/flutter_asset_manager.cpp",
      "../common/flutter/flutter_task_executor.cpp",
      "../common/flutter/flutter_window.cpp",
    ]

    defines += uicast_configs.uicast_defines
    sources += uicast_configs.uicast_core_sources

    if (platform == "ohos") {
      sources -= [ "../common/anr_thread.cpp" ]
    }

    # add sources needed by phone and TV. wearable like watch do not need them
    sources += [
      "../event/multimodal/multimodal_manager.cpp",
      "../event/multimodal/multimodal_scene.cpp",
    ]

    # add sources needed by phone, tv and wearable. previews do not need them
    if (defined(config.connect_server_support) &&
        config.connect_server_support) {
      sources += [ "../common/connect_server_manager.cpp" ]
    }

    if (defined(config.hdc_register_support) && config.hdc_register_support) {
      sources += [ "../common/hdc_register.cpp" ]
    }

    configs = [ "$ace_root/ft_build:ace_config" ]

    include_dirs = [
      "/usr/include/harfbuzz",
      "//third_party/flutter/engine"
    ]
    deps = [
      "../pipeline/ft_build:ace_core_pipeline_$platform",
      "../pipeline_ng/ft_build:ace_core_pipeline_ng_$platform",
    ]

    if (is_fangtian_build) {
      public_deps = [
        "$ace_flutter_engine_root/glfw:flutter_glfw_$platform",
        "$ace_flutter_engine_root/skia:ace_skia_$platform",
      ]
    }

    deps += [
      "$ace_root/frameworks/core/components/ability_component/ft_build:ace_core_components_ability_$platform",
      "$ace_root/frameworks/core/components/align/ft_build:ace_core_components_align_$platform",
      "$ace_root/frameworks/core/components/arc/ft_build:ace_core_components_arc_$platform",
      "$ace_root/frameworks/core/components/badge/ft_build:ace_core_components_badge_$platform",
      "$ace_root/frameworks/core/components/box/ft_build:ace_core_components_box_$platform",
      "$ace_root/frameworks/core/components/bubble/ft_build:ace_core_components_bubble_$platform",
      "$ace_root/frameworks/core/components/button/ft_build:ace_core_components_button_$platform",
      "$ace_root/frameworks/core/components/calendar/ft_build:ace_core_components_calendar_$platform",
      "$ace_root/frameworks/core/components/chart/ft_build:ace_core_components_chart_$platform",
      "$ace_root/frameworks/core/components/checkable/ft_build:ace_core_components_checkable_$platform",
      "$ace_root/frameworks/core/components/clip/ft_build:ace_core_components_clip_$platform",
      "$ace_root/frameworks/core/components/clock/ft_build:ace_core_components_clock_$platform",
      "$ace_root/frameworks/core/components/common/ft_build:ace_core_components_common_$platform",
      "$ace_root/frameworks/core/components/container_modal/ft_build:ace_core_components_container_modal_$platform",
      "$ace_root/frameworks/core/components/counter/ft_build:ace_core_components_counter_$platform",
      "$ace_root/frameworks/core/components/coverage/ft_build:ace_core_components_coverage_$platform",
      "$ace_root/frameworks/core/components/custom_dialog/ft_build:ace_core_components_custom_dialog_$platform",
      "$ace_root/frameworks/core/components/custom_paint/ft_build:ace_core_components_custom_paint_$platform",
      "$ace_root/frameworks/core/components/data_panel/ft_build:ace_core_components_data_panel_$platform",
      "$ace_root/frameworks/core/components/dialog/ft_build:ace_core_components_dialog_$platform",
      "$ace_root/frameworks/core/components/dialog_modal/ft_build:ace_core_components_dialog_modal_$platform",
      "$ace_root/frameworks/core/components/dialog_tween/ft_build:ace_core_components_dialog_tween_$platform",
      "$ace_root/frameworks/core/components/display/ft_build:ace_core_components_display_$platform",
      "$ace_root/frameworks/core/components/divider/ft_build:ace_core_components_divider_$platform",
      "$ace_root/frameworks/core/components/drag_bar/ft_build:ace_core_components_drag_bar_$platform",
      "$ace_root/frameworks/core/components/drop_filter/ft_build:ace_core_components_drop_filter_$platform",
      "$ace_root/frameworks/core/components/flex/ft_build:ace_core_components_flex_$platform",
      "$ace_root/frameworks/core/components/focus_animation/ft_build:ace_core_components_focus_animation_$platform",
      "$ace_root/frameworks/core/components/focus_collaboration/ft_build:ace_core_components_focus_collaboration_$platform",
      "$ace_root/frameworks/core/components/focusable/ft_build:ace_core_components_focusable_$platform",
      "$ace_root/frameworks/core/components/font/ft_build:ace_core_components_font_$platform",
      "$ace_root/frameworks/core/components/foreach/ft_build:ace_core_components_foreach_$platform",
      "$ace_root/frameworks/core/components/gesture_listener/ft_build:ace_core_components_gesture_listener_$platform",
      "$ace_root/frameworks/core/components/grid/ft_build:ace_core_components_grid_$platform",
      "$ace_root/frameworks/core/components/grid_layout/ft_build:ace_core_components_grid_layout_$platform",
      "$ace_root/frameworks/core/components/hyperlink/ft_build:ace_core_components_hyperlink_$platform",
      "$ace_root/frameworks/core/components/ifelse/ft_build:ace_core_components_ifelse_$platform",
      "$ace_root/frameworks/core/components/image/ft_build:ace_core_components_image_$platform",
      "$ace_root/frameworks/core/components/indexer/ft_build:ace_core_components_indexer_$platform",
      "$ace_root/frameworks/core/components/list/ft_build:ace_core_components_list_$platform",
      "$ace_root/frameworks/core/components/marquee/ft_build:ace_core_components_marquee_$platform",
      "$ace_root/frameworks/core/components/menu/ft_build:ace_core_components_menu_$platform",
      "$ace_root/frameworks/core/components/mouse_listener/ft_build:ace_core_components_mouse_listener_$platform",
      "$ace_root/frameworks/core/components/navigation_bar/ft_build:ace_core_components_navigation_bar_$platform",
      "$ace_root/frameworks/core/components/navigator/ft_build:ace_core_components_navigator_$platform",
      "$ace_root/frameworks/core/components/option/ft_build:ace_core_components_option_$platform",
      "$ace_root/frameworks/core/components/overlay/ft_build:ace_core_components_overlay_$platform",
      "$ace_root/frameworks/core/components/padding/ft_build:ace_core_components_padding_$platform",
      "$ace_root/frameworks/core/components/page/ft_build:ace_core_components_page_$platform",
      "$ace_root/frameworks/core/components/page_transition/ft_build:ace_core_components_page_transition_$platform",
      "$ace_root/frameworks/core/components/panel/ft_build:ace_core_components_panel_$platform",
      "$ace_root/frameworks/core/components/picker/ft_build:ace_core_components_picker_$platform",
      "$ace_root/frameworks/core/components/positioned/ft_build:ace_core_components_positioned_$platform",
      "$ace_root/frameworks/core/components/progress/ft_build:ace_core_components_progress_$platform",
      "$ace_root/frameworks/core/components/proxy/ft_build:ace_core_components_proxy_$platform",
      "$ace_root/frameworks/core/components/qrcode/ft_build:ace_core_components_qrcode_$platform",
      "$ace_root/frameworks/core/components/refresh/ft_build:ace_core_components_refresh_$platform",
      "$ace_root/frameworks/core/components/relative_container/ft_build:ace_core_components_relative_container_$platform",
      "$ace_root/frameworks/core/components/root/ft_build:ace_core_components_root_$platform",
      "$ace_root/frameworks/core/components/scoring/ft_build:ace_core_components_scoring_$platform",
      "$ace_root/frameworks/core/components/scroll/ft_build:ace_core_components_scroll_$platform",
      "$ace_root/frameworks/core/components/scroll_bar/ft_build:ace_core_components_scroll_bar_$platform",
      "$ace_root/frameworks/core/components/search/ft_build:ace_core_components_search_$platform",
      "$ace_root/frameworks/core/components/select_popup/ft_build:ace_core_components_select_popup_$platform",
      "$ace_root/frameworks/core/components/semi_modal/ft_build:ace_core_components_semi_modal_$platform",
      "$ace_root/frameworks/core/components/shadow/ft_build:ace_core_components_shadow_$platform",
      "$ace_root/frameworks/core/components/shape/ft_build:ace_core_components_shape_$platform",
      "$ace_root/frameworks/core/components/shared_transition/ft_build:ace_core_components_shared_transition_$platform",
      "$ace_root/frameworks/core/components/sheet/ft_build:ace_core_components_sheet_$platform",
      "$ace_root/frameworks/core/components/side_bar/ft_build:ace_core_components_side_bar_$platform",
      "$ace_root/frameworks/core/components/slider/ft_build:ace_core_components_slider_$platform",
      "$ace_root/frameworks/core/components/split_container/ft_build:ace_core_components_split_container_$platform",
      "$ace_root/frameworks/core/components/stack/ft_build:ace_core_components_stack_$platform",
      "$ace_root/frameworks/core/components/stage/ft_build:ace_core_components_stage_$platform",
      "$ace_root/frameworks/core/components/stepper/ft_build:ace_core_components_stepper_$platform",
      "$ace_root/frameworks/core/components/svg/ft_build:ace_core_components_svg_$platform",
      "$ace_root/frameworks/core/components/swiper/ft_build:ace_core_components_swiper_$platform",
      "$ace_root/frameworks/core/components/tab_bar/ft_build:ace_core_components_tab_bar_$platform",
      "$ace_root/frameworks/core/components/text/ft_build:ace_core_components_text_$platform",
      "$ace_root/frameworks/core/components/text_clock/ft_build:ace_core_components_text_clock_$platform",
      "$ace_root/frameworks/core/components/text_field/ft_build:ace_core_components_text_field_$platform",
      "$ace_root/frameworks/core/components/text_span/ft_build:ace_core_components_text_span_$platform",
      "$ace_root/frameworks/core/components/texttimer/ft_build:ace_core_components_texttimer_$platform",
      "$ace_root/frameworks/core/components/texttimer/ft_build:ace_core_components_texttimer_$platform",
      "$ace_root/frameworks/core/components/theme/ft_build:ace_core_components_theme_$platform",
      "$ace_root/frameworks/core/components/tip/ft_build:ace_core_components_tip_$platform",
      "$ace_root/frameworks/core/components/toast/ft_build:ace_core_components_toast_$platform",
      "$ace_root/frameworks/core/components/toggle/ft_build:ace_core_components_toggle_$platform",
      "$ace_root/frameworks/core/components/touch_listener/ft_build:ace_core_components_touch_listener_$platform",
      "$ace_root/frameworks/core/components/track/ft_build:ace_core_components_track_$platform",
      "$ace_root/frameworks/core/components/transform/ft_build:ace_core_components_transform_$platform",
      "$ace_root/frameworks/core/components/transition/ft_build:ace_core_components_transition_$platform",
      "$ace_root/frameworks/core/components/triangle/ft_build:ace_core_components_triangle_$platform",
      "$ace_root/frameworks/core/components/tween/ft_build:ace_core_components_tween_$platform",
      "$ace_root/frameworks/core/components/watch_slider/ft_build:ace_core_components_watch_slider_$platform",
      "$ace_root/frameworks/core/components/wrap/ft_build:ace_core_components_wrap_$platform",
   ]
  deps += [
    "$ace_root/frameworks/core/components_ng/pattern/qrcode/ft_build:ace_core_components_qrcode_pattern_ng_$platform",
  ]
   deps += [
      "$ace_root/frameworks/core/components_v2/common/ft_build:ace_core_components_common_v2_$platform",
      "$ace_root/frameworks/core/components_v2/foreach/ft_build:ace_core_components_foreach_v2_$platform",
      "$ace_root/frameworks/core/components_v2/grid/ft_build:ace_core_components_grid_v2_$platform",
      "$ace_root/frameworks/core/components_v2/grid_layout/ft_build:ace_core_components_grid_layout_v2_$platform",
      "$ace_root/frameworks/core/components_v2/indexer/ft_build:ace_core_components_indexer_v2_$platform",
      "$ace_root/frameworks/core/components_v2/inspector/ft_build:ace_core_components_inspector_v2_$platform",
      "$ace_root/frameworks/core/components_v2/list/ft_build:ace_core_components_list_v2_$platform",
      "$ace_root/frameworks/core/components_v2/pattern_lock/ft_build:ace_core_components_pattern_lock_$platform",
      "$ace_root/frameworks/core/components_v2/swiper/ft_build:ace_core_components_swiper_v2_$platform",
      "$ace_root/frameworks/core/components_v2/tabs/ft_build:ace_core_components_tabs_v2_$platform",
      "$ace_root/frameworks/core/components_v2/water_flow/ft_build:ace_core_components_water_flow_v2_$platform",
   ]

    deps += [ "$ace_root/frameworks/core/components_part_upd/foreach/ft_build:ace_core_components_foreach_part_upd_$platform" ]

    deps += [
      "$ace_root/frameworks/core/components_ng/base/ft_build:ace_core_components_base_ng_$platform",
      "$ace_root/frameworks/core/components_ng/event/ft_build:ace_core_components_event_ng_$platform",
      "$ace_root/frameworks/core/components_ng/gestures/ft_build:ace_core_components_gestures_ng_$platform",
      "$ace_root/frameworks/core/components_ng/image_provider/ft_build:ace_core_components_image_provider_ng_$platform",
      "$ace_root/frameworks/core/components_ng/layout/ft_build:ace_core_components_layout_ng_$platform",
      "$ace_root/frameworks/core/components_ng/manager/ft_build:ace_core_components_manager_ng_$platform",
      "$ace_root/frameworks/core/components_ng/pattern/ft_build:ace_core_components_pattern_ng_$platform",
      "$ace_root/frameworks/core/components_ng/property/ft_build:ace_core_components_property_ng_$platform",
      "$ace_root/frameworks/core/components_ng/render/ft_build:ace_core_components_render_ng_$platform",
      "$ace_root/frameworks/core/components_ng/svg/ft_build:ace_core_components_svg_ng_$platform",
      "$ace_root/frameworks/core/components_ng/syntax/ft_build:ace_core_components_syntax_ng_$platform",
    ]
    if (defined(config.enable_ability_component) &&
        config.enable_ability_component) {
      deps += [ "$ace_root/frameworks/core/components_ng/pattern/ft_build:ace_core_components_pattern_ability_component_ng_$platform" ]
    }

    if (defined(config.web_components_support) && config.web_components_support) {
      deps += [
        "$ace_root/frameworks/core/components/text_overlay/ft_build:ace_core_components_text_overlay_for_web_$platform",
        "$ace_root/frameworks/core/components/web/ft_build:ace_core_components_web_$platform",
        "$ace_root/frameworks/core/components_ng/pattern/web/ft_build:ace_core_components_web_pattern_ng_$platform",
      ]
    } else {
      deps += [ "$ace_root/frameworks/core/components/text_overlay/ft_build:ace_core_components_text_overlay_$platform" ]
    }

    deps += [
        "$ace_root/frameworks/core/components_ng/pattern/text_field/ft_build:ace_core_components_text_field_pattern_ng_$platform",
    ]

    # xcomponent components supports phone, TV and wearable except PC Preview
    if (defined(config.xcomponent_components_support) &&
        config.xcomponent_components_support) {
      deps += [ "$ace_root/frameworks/core/components/xcomponent/ft_build:ace_core_components_xcomponent_$platform" ]
    }

    if (defined(config.enable_ability_component) &&
        config.enable_ability_component) {
      deps += [ "$ace_root/frameworks/core/components_v2/ability_component/ft_build:ace_core_components_ability_v2_$platform" ]
    }

    if (defined(config.apng_image_support) && config.apng_image_support) {
      defines += [ "APNG_IMAGE_SUPPORT" ]
      deps += [ "$ace_root/frameworks/core/image/apng/ft_build:ace_core_apng_$platform" ]
    }

    if (defined(config.form_components_support) &&
        config.form_components_support) {
      if (!use_linux) {
        sources += [ "../common/form_manager.cpp" ]
        deps += [
          "$ace_root/frameworks/core/components/form/ft_build:ace_core_components_form_$platform",
          "$ace_root/frameworks/core/components_ng/pattern/form/ft_build:ace_core_components_form_pattern_ng_$platform",
        ]
        deps += [ "form_fwk:form_manager" ]
      }
    }

    if (defined(config.remote_window_support) && config.remote_window_support) {
      if (!use_linux) {
        deps += [
          "$ace_root/frameworks/core/components/remote_window/ft_build:ace_core_components_remote_window_$platform",
          "$ace_root/frameworks/core/components_ng/pattern/remote_window/ft_build:ace_core_components_remote_window_pattern_ng_$platform",
        ]
      }
    }

    if (defined(config.build_container_scope_lib) &&
        config.build_container_scope_lib) {
      sources -= [ "../common/container_scope.cpp" ]
      if (defined(config.build_for_ios) && config.build_for_ios) {
        deps += [ "$ace_napi/ft_build:ace_container_scope_static" ]
      } else {
        deps += [ "$ace_napi/ft_build:ace_container_scope" ]
      }
    }

    if (defined(config.plugin_components_support) &&
        config.plugin_components_support) {
      deps += [
        "$ace_root/frameworks/core/components/plugin/ft_build:ace_core_components_plugin_$platform",
        "$ace_root/frameworks/core/components_ng/pattern/plugin/ft_build:ace_core_components_plugin_pattern_ng_$platform",
      ]
      sources += [ "../common/plugin_manager.cpp" ]
      deps += [ "//build/gn/configs/system_libs:c_utils" ]
    }

    if (defined(config.preview_support) && config.preview_support) {
      deps += [ "$ace_root/frameworks/core/components_ng/pattern/preview_mock/ft_build:ace_core_components_preview_mock_pattern_ng_$platform" ]
    }

    # Fangtian TODO
    include_dirs += [ "//foundation/window/window_manager/interfaces/innerkits" ]
    include_dirs += uicast_configs.uicast_root_include

    deps += [
      "$ace_root/frameworks/core/components/camera/ft_build:ace_core_components_camera_$platform",
      "$ace_root/frameworks/core/components/multimodal/ft_build:ace_core_components_multimodal_$platform",
      "$ace_root/frameworks/core/components/piece/ft_build:ace_core_components_piece_$platform",
      "$ace_root/frameworks/core/components/popup/ft_build:ace_core_components_popup_$platform",
      "$ace_root/frameworks/core/components/rating/ft_build:ace_core_components_rating_$platform",
      "$ace_root/frameworks/core/components/select/ft_build:ace_core_components_select_$platform",
      "$ace_root/frameworks/core/components/tool_bar/ft_build:ace_core_components_tool_bar_$platform",
      "$ace_root/frameworks/core/components/video/ft_build:ace_core_components_video_$platform",
    ]

    deps += uicast_configs.uicast_root_deps

    if (is_fangtian_build) {
        sources += [
          "../animation/native_curve_helper.cpp",
          "../common/rosen/rosen_convert_helper.cpp",
        ]
        deps += [
          "//build/gn/configs/system_libs:ft_engine",
          # "//third_party/flutter/build/fangtian/libtxt:thirdparty_lib_txt_fangtian",
          # "//foundation/graphic/graphic_2d/rosen/modules/2d_engine/rosen_text/ui:rosen_text_ui"
        ]
    } else {
        if ((current_os == "linux") && defined(config.enable_rosen_backend) &&
            config.enable_rosen_backend) {
          sources -= [
            "../common/flutter/flutter_asset_manager.cpp",
            "../common/flutter/flutter_window.cpp",
          ]
          sources += [
            # rs impl
            "../common/rosen/rosen_asset_manager.cpp",
            "../common/rosen/rosen_window.cpp",
          ]
          deps += [ "//build/gn/configs/system_libs:libuv" ]
        }
    }

    cflags_cc = []
    cflags_cc += invoker.cflags_cc
    cflags_cc += [
      "-Wno-return-stack-address",
      "-Wno-sign-compare",
      "-Wno-unused-lambda-capture",
    ]
  }
}

foreach(item, ace_platforms) {
  ace_core_source_set("ace_core_" + item.name) {
    platform = item.name

    if (defined(item.config)) {
      config = item.config
    } else {
      config = {
      }
    }

    if (defined(config.defines)) {
      defines = config.defines
    } else {
      defines = []
    }

    if (defined(config.cflags_cc)) {
      cflags_cc = config.cflags_cc
    } else {
      cflags_cc = []
    }
  }
}
