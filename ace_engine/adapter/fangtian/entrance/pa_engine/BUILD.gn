# Copyright (c) 2023 Huawei Technologies Co., Ltd. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#import("//build/ohos.gni")
import("//build/gn/fangtian.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

template("pa_backend") {
  forward_variables_from(invoker, "*")

  ft_source_set(target_name) {
    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    configs = [ "$ace_root:ace_config" ]

    deps = []

    include_dirs = [
      "$ability_runtime_services_path/common/include",
      "$ability_runtime_path/interfaces/kits/native/ability/native",
      "$ability_runtime_inner_api_path/ability_manager/include",
      "$ability_runtime_services_path/abilitymgr/include",
      "$ability_runtime_services_path/common/include",
      "$ability_runtime_napi_path/context",
      "$ability_runtime_napi_path/inner/napi_common",
    ]
    deps = [
#"$ability_runtime_napi_path/inner/napi_common:napi_common",
#"$ability_runtime_path/frameworks/native/ability/native:abilitykit_native",
#     "$ability_runtime_path/frameworks/native/appkit:appkit_native",
#"//foundation/arkui/napi:ace_napi",
      "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk:system_ability_fwk",
      "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    ]
    deps += [
#"ability_base:want",
#     "ability_base:zuri",
#     "bundle_framework:appexecfwk_base",
#"bundle_framework:appexecfwk_core",
      "//commonlibrary/c_utils/base:utils",
#"eventhandler:libeventhandler",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
      "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
#"//foundation/communication/ipc/interfaces/innerkits/kits/js/napi:rpc",
#"napi:ace_napi",
#"relational_store:native_dataability",
#"relational_store:native_rdb",
      "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    ]

    sources = [
      "backend_delegate_impl.cpp",
      "pa_backend.cpp",
    ]

    sources += [ "engine/common/js_backend_engine_loader.cpp" ]
  }
}

foreach(item, ace_platforms) {
  pa_backend("pa_backend_" + item.name) {
    config = {
    }

    if (defined(item.config)) {
      config = item.config
    }
  }
}
